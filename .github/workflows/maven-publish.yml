# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Publish Maven Package

on:
  workflow_dispatch:
    inputs:
        releaseVersion:
          description: "Default version to use when preparing a release."
          required: true
          default: "X.Y.Z"
        developmentVersion:
          description: "Default version to use for new development"
          required: true
          default: "-SNAPSHOT"
jobs:
      
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - name: Echo inputs
      run: |
          echo "Current working directory is ${{ github.workspace }}"
          echo "Current working directory is $GITHUB_WORKSPACE"
          echo "Release version : ${{github.event.inputs.releaseVersion}}"
          echo "Snapshot version : ${{github.event.inputs.developmentVersion}}"
          echo " Github actor : ${{github.actor}}"
          echo " Github token : ${{github.token}}"
          docker --version
    
    - name: Set env for selected build tag or branch
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - name: Selected Branch or Tag 
      run: |
        echo $RELEASE_VERSION
        echo ${{env.RELEASE_VERSION}}

    - name: Checkout Source Code
      uses: actions/checkout@v2
      with:
          ref: master
    

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
        
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Configure Git User
      run: |
        git config user.email "madfan2002@users.noreply.github.com"
        git config user.name "Babban Magan"

    - name: Release
      run: mvn release:prepare  -B -DreleaseVersion=${{ github.event.inputs.releaseVersion }} -DdevelopmentVersion=${{ github.event.inputs.developmentVersion }}
 
    - name: Build with Maven
      run: mvn clean install -DskipTests --file pom.xml
   

    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}
